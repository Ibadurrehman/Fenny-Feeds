@model IEnumerable<FennyFeeds.ViewModels.VM_HomePage_Display_Product>

@{
    ViewBag.Title = "DisplayProductList";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<section class="inner-wrapper">
    <div class="header-wrapper">
        <h3><i class="mdi mdi-cart mr-1"></i>Product List</h3>
    </div>
    <div class="body-wrapper body-grid">
        <div class="btn-group" onclick="BulkDelete();">
            <button type="button" class="btn btn-danger btn-sm"><span class="mdi mdi-delete"></span></button>
            <button type="button" class="btn btn-danger btn-sm">Delete</button>
        </div>
        <table class="table table-bordered bg-white table-product" id="DisplayProductList">
            <thead>
                <tr>
                    <th class="wd-checkbox">
                        <div class="td-center">
                            <input type="checkbox" id="CheckboxHead" />
                        </div>
                    </th>
                    <th class="wd-10">Category</th>
                    <th class="wd-10">Title</th>
                    <th class="wd-105">Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
            <tfoot>
                <thead>
                    <tr>
                        <th></th>
                        <th class="wd-10">Category</th>
                        <th class="wd-10">Title</th>
                        <th class="wd-105">Action</th>
                    </tr>
                </thead>
            </tfoot>
        </table>
    </div>

</section>

<!--View Product Modal -->

@*<div class="modal fade" id="viewProduct" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"><i class="mdi mdi-eye mr-1"></i>Product Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="ProductDetails">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>*@


<!--Edit Modal -->

<div class="modal fade" id="editDisplayProduct" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" id="editmodal">
    </div>
</div>


<script src="~/content/scripts/jquery-3.3.1.min.js"></script>
<script src="~/content/scripts/select2.min.js"></script>
<script src="~/content/scripts/bootstrap.bundle.min.js"></script>

<script>

    $(document).ready(function () {
        ShowLoader();
        $.ajax({
            url: "@Url.Action("Get_Display_Product_List")",
            method: "get",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                HideLoader();
                $('#DisplayProductList').DataTable({
                    data: data,
                    //"createdRow": [{
                    //    "data": "Product_Is_Hide",
                    //    "render": function (row, data, index) {
                    //        return $(row).addClass(data);
                    //        //$('td', row).eq(5).addClass('highlight');
                    //    }
                    //}],
                    "createdRow": function (row, data, Index) {
                        if (data.Product_Is_Hide != "") {
                            return $(row).addClass(data.Product_Is_Hide);
                        }
                    },
                    'columnDefs': [{
                        "data": "Record_ID",
                        'targets': 0,
                        'searchable': false,
                        'orderable': false,
                        'className': 'dt-body-center',
                        'render': function (data, type, full, meta) {
                            return '<input type="checkbox" name="checkboxChild" onchange"ChildChangeEvent();" value="' + data + '">';
                            //return '<input type="checkbox" name="id[]" value="'
                            //   + $('<div/>').text(data).html() + '">';
                        }
                    }],

                    //"lengthMenu": [[10, 25, 50, -1], ["10 Record", "25 Record", "50 Record", "All"]],
                    order: [[0, 'dsc']],
                    dom: 'Bfrtip',
                    buttons: [
                        'copyHtml5',
                        'excelHtml5',
                        'csvHtml5',
                        'pdfHtml5',
                        'print'
                    ],
                    columns: [
                    { "": "" },
                    { "data": "Category" },
                    { "data": "Title" },
                    {
                        "data": "Record_ID", "className": "options-overflow", "render": function (data) { // <-- `ID` instead of `id`
                            return "<button onclick='openDisplayProductLightboxForEdit(" + data + ")'>E</button> / <button Onclick=RemoveMeIamDisplayProduct(this," + data + ");>D</button>"
                            //return "<td class='options-overflow'><div class='dropdown'><a class='btn btn-warning btn-sm dropdown-toggle' href='#' role='button' id='dropdownMenuLink' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>Options</a><div class='dropdown-menu dropdown-menu-right' aria-labelledby='dropdownMenuLink'><a class='dropdown-item' href='#' data-toggle='modal' data-target='#viewProduct'><i class='mdi mdi-eye mr-2'></i>More Details</a><a class='dropdown-item' href='#' data-toggle='modal' data-target='#editProduct'><i class='mdi mdi-pencil mr-2'></i>Edit</a><a class='dropdown-item' href='#'><i class='mdi mdi-delete mr-2'></i>Delete</a></div></div></td>"
                        },
                    }
                     //{
                     //    data: null,
                     //    className: "center",
                     //    defaultContent: '<button onclick="EditProduct(' + Record_ID + ')">E</button> / <button onclick="EditProduct(Record_ID)">D</button> / <button onclick="EditProduct(Record_ID)">M</button>'
                     //}
                    //{
                    //    data: null,
                    //    className: "center",
                    //    defaultContent: buttonString
                    //}

                    ]


                });
            }
        });


        $("#CheckboxHead").change(function () {
            $('input[type="checkbox"]').prop("checked", $(this).prop("checked"));
        });

    });

    function openDisplayProductLightboxForEdit(Record_ID) {

        ShowLoader();
        var url = 'GetDisplayProductRecords?Record_ID=' + Record_ID;// '@Url.Action("GetProductRecordsForEdit?Record_ID=")';

        $("#editmodal").load(url, function () {
            HideLoader();
            $("#editDisplayProduct").modal("show");

        })

    }

    function RemoveMeIamDisplayProduct(that, Record_ID) {

        swal({
            title: "Confirmation?",
            text: "Are you sure want to delete this record.",
            type: "info",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: false,
            closeOnCancel: true
        }, function (isConfirm) {
            if (isConfirm) {

                $.ajax({
                    type: "POST",
                    url: 'DeleteDisplayProductSingleRecord?Record_ID=' + Record_ID,
                    dataType: "json",
                    data: function () {

                    }(),
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {

                        if (result.Action == "done") {
                            swal({
                                title: "Deleted!",
                                text: result.msg,
                                type: "success",
                                icon: "success"
                            });

                            $(that).parent().parent().remove();
                        }
                        else {
                            swal({
                                title: "Not Deleted!",
                                text: result.msg,
                                type: "error",
                                icon: "error"
                            });

                        }
                    }
                });

            } else {
                //swal("Cancelled", "Your imaginary file is safe :)", "error");
            }
        });

    }

    function ChildChangeEvent() {
        $("#CheckboxHead").prop("checked", false);
    }

    function BulkDelete() {

        if (Number($('input[name="checkboxChild"]:checked').length) == 0) {
            swal({
                title: "Warning!",
                text: "Please select record first",
                type: "error",
                icon: "error"
            });
            return false;
        }

        var RecordIds = [];

        $('input[name="checkboxChild"]:checked').each(function () {
            RecordIds.push($(this).val());
        });

        RemoveDisplayProductInBulk(RecordIds.join(","));
    }

    function RemoveDisplayProductInBulk(RecordIds) {
        debugger;
        
        swal({
            title: "Confirmation?",
            text: "Are you sure want to delete this record.",
            type: "info",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            closeOnConfirm: false,
            closeOnCancel: true
        }, function (isConfirm) {
            if (isConfirm) {

                var obj = JSON.stringify({ RecordIds: RecordIds });

                $.ajax({
                    type: "POST",
                    url: 'DeleteDisplayProductMultipleRecord',
                    dataType: "json",
                    data: obj,
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {

                        if (result.Action == "done") {
                            swal({
                                title: "Deleted!",
                                text: result.msg,
                                type: "success",
                                icon: "success"
                            },function () {
                                window.location = "DisplayProductList";
                            });

                        }
                        else {
                            swal({
                                title: "Not Deleted!",
                                text: result.msg,
                                type: "error",
                                icon: "error"
                            });

                        }
                    }
                });

            } else {
                //swal("Cancelled", "Your imaginary file is safe :)", "error");
            }
        });

    }

    //$('#ddlEditCategory').select2({
    //    //minimumResultsForSearch: Infinity
    //});


    //function openProductLightboxForDetails(Record_ID) {
    //    ShowLoader();
    //    $.ajax({
    //        type: "GET",
    //        url: 'GetProductRecords?Record_ID=' + Record_ID,
    //        //dataType: "json",
    //        //data: obj,
    //        data: function () {

    //        }(),
    //        contentType: false,
    //        processData: false,
    //        //contentType: "application/json; charset=utf-8",
    //        success: function (result) {
    //            HideLoader();

    //            var div = "";
    //            var img_div = [];
    //            for (var i in result) {

    //                //loop for all product images
    //                for (var j in result[i].ImageCollection) {
    //                    img_div.push('<img src="' + result[i].ImageCollection[j] + '" />');
    //                }

    //                div = '<div class="product-details-table">'
    //                    + '<table class="table table-bordered table-hover">'
    //                    + '<tbody>'
    //                    + '<tr><td>Product Category</td><td>' + result[i].Category + '</td></tr>'
    //                    + '<tr><td>Brand</td><td>' + result[i].BrandName + '</td></tr>'
    //                    + '<tr><td>Product Name</td><td>' + result[i].ProductName + '</td></tr>'
    //                    + '<tr><td>Product Code</td><td>' + result[i].ProductCode + '</td></tr>'
    //                    + '<tr><td>Product Unit Price</td><td>' + result[i].ProductPrice + '</td></tr>'
    //                    + '<tr><td>Product Quantity</td><td>' + result[i].ProductQuantity + '</td></tr>'
    //                    + '<tr><td>Product Discount</td><td>' + result[i].ProductDiscount + '%</td></tr>'
    //                    + '<tr><td>Creation Date</td><td>' + result[i].CreationDate + '</td></tr>'
    //                    //+ '<tr><td>Product Description</td><td>' + result[i].CreationDate + '</td></tr>'
    //                    + '<tr><td>Product Images</td>'
    //                    + '<td>'
    //                    + '<div class="uploaded-images">'
    //                img_div
    //            + '</div>'
    //            + '</td>'
    //            + '</tr>'
    //            + '</tbody>'
    //            + '</table>'
    //            + '</div>'
    //            }

    //            $("#ProductDetails").html(div);
    //            $("#viewProduct").modal("show");

    //        }
    //    });


    //}


</script>


